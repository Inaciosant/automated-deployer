name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: inaciosant
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: inaciosant/trabalho-docker:latest

  sonarqube-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 201.23.3.86 >> ~/.ssh/known_hosts

      - name: Start SonarQube container remotely
        run: |
          ssh aluno@201.23.3.86 << 'EOF'
            docker run -d --name sonarqube -p 9000:9000 sonarqube:community
          EOF

      - name: Aguarda SonarQube subir
        run: sleep 60

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=trabalho-docker \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://201.23.3.86:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Verifica aprovação do Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sleep 10
          STATUS=$(curl -s -u $SONAR_TOKEN: "http://201.23.3.86:9000/api/qualitygates/project_status?projectKey=trabalho-docker" | jq -r .projectStatus.status)
          echo "Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "❌ Quality Gate falhou: $STATUS"
            exit 1
          fi

      - name: Para e remove container SonarQube
        if: always()
        run: |
          ssh aluno@201.23.3.86 "docker stop sonarqube && docker rm sonarqube"

  deploy:
    needs: sonarqube-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 201.23.3.86 >> ~/.ssh/known_hosts

      - name: Deploy no servidor remoto
        run: |
          ssh aluno@201.23.3.86 << 'EOF'
            docker pull inaciosant/trabalho-docker:latest

            # Remove container antigo, se existir
            docker stop trabalho-docker || true && docker rm trabalho-docker || true

            # Sobe o novo container
            docker run -d --name trabalho-docker -p 8140:8000 inaciosant/trabalho-docker:latest
          EOF
