name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: inaciosant
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: inaciosant/trabalho-docker:latest

  sonarqube-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          printf '%s\n' "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 201.23.3.86 >> ~/.ssh/known_hosts

      - name: Garante que não há SonarQube rodando
        run: |
          ssh aluno@201.23.3.86 "docker stop sonarqube || true && docker rm sonarqube || true"

      - name: Start SonarQube container remotely
        run: |
          ssh aluno@201.23.3.86 << 'EOF'
            docker pull sonarqube:community
            docker run -d --name sonarqube -p 8140:9000 sonarqube:community
          EOF

      - name: Verifica acesso ao SonarQube
        run: |
          for i in {1..20}; do
            if curl -s http://201.23.3.86:8140 | grep -q "SonarQube"; then
              echo "SonarQube está no ar!"
              exit 0
            fi
            echo "Aguardando SonarQube subir..."
            sleep 12
          done
          echo "SonarQube não respondeu a tempo."
          exit 1

      - name: Instala SonarQube Scanner
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=trabalho-docker \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://201.23.3.86:8140

      - name: Verifica aprovação do Quality Gate
        run: |
          sleep 10
          STATUS=$(curl -s "http://201.23.3.86:8140/api/qualitygates/project_status?projectKey=trabalho-docker" | jq -r .projectStatus.status)
          echo "Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "❌ Quality Gate falhou: $STATUS"
            exit 1
          fi

      - name: Para e remove container SonarQube
        if: always()
        run: |
          ssh aluno@201.23.3.86 "docker stop sonarqube && docker rm sonarqube"

  deploy:
    needs: sonarqube-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          printf '%s\n' "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 201.23.3.86 >> ~/.ssh/known_hosts
      - name: Deploy no servidor remoto
        run: |
          ssh aluno@201.23.3.86 << 'EOF'
            docker pull inaciosant/trabalho-docker:latest
            docker stop trabalho-docker || true && docker rm trabalho-docker || true
            docker run -d --name trabalho-docker -p 8140:8000 inaciosant/trabalho-docker:latest
          EOF